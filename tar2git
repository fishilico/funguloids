#!/bin/bash
set -ex


rsync --delete --archive pabs3,funguloids@frs.sourceforge.net:/home/frs/project/f/fu/funguloids/ frs/
rsync --delete --archive pabs3,funguloids@web.sourceforge.net:htdocs/  web/

rm -rf extracted ; mkdir extracted
rm -rf tmp ; mkdir tmp ; cd tmp
for f in $(find ../frs -type f) ; do
	unp $f || 7z x -o$(basename $f) $f || true
	rmdir * || true
	mv */ ../extracted/$(basename $f) || true
done
cd .. ; rm -rf tmp

function process()
{
	cd $1
	cd files
	for f in docs music readme.html plugins.cfg resources.cfg gamesettings.cfg funguloids.mpk bootstrap.mpk funguloids.png ; do
		if [ -e $f ] ; then
			mkdir -p bin || true
			mv $f bin
			echo "$f -> bin/$f" >> ../moved
		fi
	done
	for f in $(find * -iname '*.mpk') ; do
		python ../../../mpak.py -e -p $(dirname $f)/$(basename $f .mpk) -f $f
		rm -f $f
		echo $f | tee -a ../deleted >> ../unpacked
	done
	for f in $(find * -iname '*.dds') ; do
		convert $f +set date:create +set date:modify $(dirname $f)/$(basename $f .dds).png
		rm -f $f
		echo $f | tee -a ../deleted >> ../converted
	done
	for f in $(find * -iname '*.mesh') ; do
		OgreXMLConverter $f $(dirname $f)/$(basename $f .mesh).xml
		rm -f $f
		echo $f | tee -a ../deleted >> ../converted
		rm -f OgreXMLConverter.log
	done
	for f in $(find * -iname '*.skeleton') ; do
		OgreXMLConverter $f $(dirname $f)/$(basename $f .skeleton).xml
		rm -f $f
		echo $f | tee -a ../deleted >> ../converted
		rm -f OgreXMLConverter.log
	done
	for f in $(find * -iname lua) configure include/SimpleIni WS_FTP.LOG $(find * -iname config.h* -o -iname 'Vera*.ttf' -o -iname '*.lib' -o -iname '*.exe' -o -iname '*.dll' -o -name Makefile.in -o -name build-aux -o -name aclocal.m4 ) ; do
		if [ -e $f ] ; then
			rm -rf $f
			echo $f >> ../deleted
		fi
	done
	find * -empty -delete -print >> ../deleted
	echo "Import $1 (version $2)" > ../commit-msg
	if [ -s ../moved ] ; then
		echo "
These files have been moved:

$(cat ../moved)" >> ../commit-msg
	fi
	if [ -s ../unpacked ] ; then
		echo "
These files have been unpacked:

$(cat ../unpacked)" >> ../commit-msg
	fi
	if [ -s ../converted ] ; then
		echo "
These files have been converted:

$(cat ../converted)" >> ../commit-msg
	fi
	if [ -s ../deleted ] ; then
		echo "
These files have been deleted:

$(cat ../deleted)" >> ../commit-msg
	fi
	cd ..
	cd ..
}

rm -rf processed ; mkdir processed ; cd processed
for f in $(find ../frs -type f) ; do
	mkdir "$(basename $f)"
	cp -a "../extracted/$(basename $f)" "$(basename $f)/files"
	process "$(basename $f)" "$(basename $f | sed 's/funguloids-//;s/win32-//;s/linux-//;s/src-//;s/\.exe//;s/\.tar\.bz2//;s/\.7z//;s/\.zip//')"
done
cd ..

function merge_dirs()
{
	for f in $(diff -aur "$1/files" "$2/files" | grep '^Only in ' | sed 's/^Only in //;s_: _/_') ; do
		merge="$(echo $f | sed 's_^[^/]\+/files/__')"
		case $f in
			$1/files/*)
				cp -a "$f" "$2/files/$merge"
				echo "$merge" >> "$2/merged";;
			$2/files/*)
				cp -a "$f" "$1/files/$merge"
				echo "$merge" >> "$1/merged";;
			*)
				echo "Error comparing dirs"
				exit 1;;
		esac
	done

	if [ -s $1/merged ] ; then
		echo "
These files have been merged from data/src:

$(cat $1/merged)" >> $1/commit-msg
	fi

	if [ -s $2/merged ] ; then
		echo "
These files have been merged from data/src:

$(cat $2/merged)" >> $2/commit-msg
	fi
}

cd processed
merge_dirs funguloids-win32-src-1.0.zip funguloids-win32-1.0.7z
merge_dirs funguloids-win32-src-1.01.zip funguloids-win32-1.01.7z
merge_dirs funguloids-win32-src-1.05.zip funguloids-win32-1.05.7z
merge_dirs funguloids-win32-src-1.06.zip funguloids-win32-1.06.7z
cd ..

function importdir()
{
	rm -rf *
	cp -a ../tar2git .
	cp -a ../processed/$1/files/* .
	git add -u || true
	git add . || true
	git commit --date="$(date --reference $(find ../frs -name "$1"))" -F "../processed/$1/commit-msg" || true
	git tag "$1" || true
}

rm -rf git ; mkdir git ; cd git
git init
cp ../tar2git .
git add .
git commit -m 'Add script used to import the tarballs'

export GIT_AUTHOR_NAME="Mika Halttunen"
export GIT_AUTHOR_EMAIL="mika.halttunen@gmail.com"

git branch windows
git checkout windows
importdir funguloids-win32-src-1.0.zip
importdir funguloids-win32-1.0.7z
importdir funguloids-win32-src-1.01.zip
importdir funguloids-win32-1.01.7z
importdir funguloids-win32-src-1.05.zip
importdir funguloids-win32-1.05.7z
importdir funguloids-win32-src-1.06.zip
importdir funguloids-win32-1.06.7z

git checkout funguloids-win32-1.05.7z
git checkout -b linux
importdir funguloids-linux-1.05.tar.bz2 1.05
importdir funguloids-linux-1.05f.tar.bz2 1.05f
git merge -s recursive -X ours funguloids-win32-1.06.7z || true
git rm -f bin/installer.nsi Funguloids.vcproj
git commit -m 'Merge 1.06 into Linux branch'
importdir funguloids-linux-1.06.tar.bz2 1.06
importdir funguloids-linux-1.06-4.tar.bz2 1.06-4

unset GIT_AUTHOR_NAME
unset GIT_AUTHOR_EMAIL

git checkout master
git reset --hard funguloids-linux-1.06-4.tar.bz2
git branch -D linux
git branch -D windows
git rm -f tar2git
git commit -m 'Drop script used to import the tarballs since it is not needed'
